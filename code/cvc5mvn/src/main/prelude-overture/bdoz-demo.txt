cmdfunctions:

precondition: ( m[x++"m"]@i2 == m[x++"k"]@i1 + (m["delta"]@i1 * m[x++"s"]@i2) )
_open(x:string, i1:cid, i2:cid){
    m[x++"exts"]@i1 := m[x++"s"]@i2;
    m[x++"extm"]@i1 := m[x++"m"]@i2;
    assert(m[x++"extm"] = m[x++"k"] + (m["delta"] * m[x++"exts"]))@i1;
    m[x]@i1 := (m[x++"exts"] + m[x++"s"])@i1
}

precondition: ( m[x++"m"]@1 == m[x++"k"]@2 + (m["delta"]@2 * m[x++"s"]@1) AND
m[x++"m"]@2 == m[x++"k"]@1 + (m["delta"]@1 * m[x++"s"]@2) )
open(x:string) { _open(x,1,2); _open(x,2,1) }

_sum(z:string, x:string, y:string, i:cid){
    m[z++"s"]@i := (m[x++"s"] + m[y++"s"])@i;
    m[z++"m"]@i := (m[x++"m"] + m[y++"m"])@i;
    m[z++"k"]@i := (m[x++"k"] + m[y++"k"])@i
}

precondition: ( m[x++"m"]@2 == m[x++"k"]@1 + (m["delta"]@1 * m[x++"s"]@2) AND
m[y++"m"]@2 == m[y++"k"]@1 + (m["delta"]@1 * m[y++"s"]@2) AND
m[x++"m"]@1 == m[x++"k"]@2 + (m["delta"]@2 * m[x++"s"]@1) AND
m[y++"m"]@1 == m[y++"k"]@2 + (m["delta"]@2 * m[y++"s"]@1) )
sum(z:string, x:string, y:string){ _sum(z,x,y,1); _sum(z,x,y,2) }
postcondition: ( m[z++"m"]@2 == m[z++"k"]@1 + (m["delta"]@1 * m[z++"s"]@2) AND
m[z++"m"]@1 == m[z++"k"]@2 + (m["delta"]@2 * m[z++"s"]@1) )


_mult(z:string, x:string, y:string, i:cid) {
    m[z++"s"]@i := (m[z++"d"] * m[y++"s"] + -m[z++"e"] * m[z++"as"] + m[z++"cs"])@i;
    m[z++"m"]@i := (m[z++"d"] * m[y++"m"] + -m[z++"e"] * m[z++"am"] + m[z++"cm"])@i;
    m[z++"k"]@i := (m[z++"d"] * m[y++"k"] + -m[z++"e"] * m[z++"ak"] + m[z++"ck"])@i
}

precondition: ( m[x++"m"]@2 == m[x++"k"]@1 + (m["delta"]@1 * m[x++"s"]@2) AND
m[y++"m"]@2 == m[y++"k"]@1 + (m["delta"]@1 * m[y++"s"]@2) AND
m[z++"am"]@2 == m[z++"ak"]@1 + (m["delta"]@1 * m[z++"as"]@2) AND
m[z++"bm"]@2 == m[z++"bk"]@1 + (m["delta"]@1 * m[z++"bs"]@2) AND
m[z++"cm"]@2 == m[z++"ck"]@1 + (m["delta"]@1 * m[z++"cs"]@2) AND
m[z++"cs"]@1 + m[z++"cs"]@2 ==
(m[z++"as"]@1 + m[z++"as"]@2) * (m[z++"bs"]@1 + m[z++"bs"]@2))
mult(z:string, x:string, y:string) {
    sum(z++"d", x, z++"a");
    open(z++"d");
    sum(z++"e", y, z++"b");
    open(z++"e"); 
    _mult(z,x,y,1); _mult(z,x,y,2)
}
postcondition: ( m[z++"m"]@2 == m[z++"k"]@1 + (m["delta"]@1 * m[z++"s"]@2) AND
m[z++"s"]@1 + m[z++"s"]@2 ==
(m[x++"s"]@1 + m[x++"s"]@2) * (m[y++"s"]@1 + m[y++"s"]@2) )

main() {
    sum("z","x","y");
    open("z");

    mult("k","i","j");
    open("k")
}